---
import ColorIndicator from './ColorIndicator.astro';
import type ListCardModel from 'src/models/ListCardModel';
import { toPascal } from '@scripts/utils';

//Use a special interface instead of cardmodel because we only select limited columns.
import rarityConfig from "src/config/rarity-config.json";

interface Props {
    cards: ListCardModel[]
}

const { cards } = Astro.props;

const cardTypes: Record<string,string> = {
    "Character": "CH",
    "Event": "EV",
    "Climax": "CX"
};

---
<div class="list-wrapper">
    <table class="card-list">
        <thead>
            <tr>
                <th>Card No.</th>
                <th>Name</th>
                <th class="center">Type</th>
                <th class="center"><abbr title="Color">CL</abbr></th>
                <th class="center"><abbr title="Level/Cost">LV/C</abbr></th>
                <th class="center">Rarity</th>
                <th>Set</th>
            </tr>
        </thead>
        <tbody>
            <!-- <a href={"/card/" + card.id} tabindex="-1"> -->
            {cards.map((card) => 
                <tr data-card-image={card.image}>
                    <td>
                        <a href={"/card/" + card.id} tabindex="-1">{card.cardno}</a>
                    </td>
                    <td>
                        <a href={"/card/" + card.id}>{card.name}</a>
                    </td>
                    <td class="center">
                        <a href={"/card/" + card.id} tabindex="-1">
                            <abbr title={card.type}>{ cardTypes[card.type] }</abbr>
                        </a>
                    </td>
                    <td class="center">
                        <a href={"/card/" + card.id} tabindex="-1">
                            <abbr title={toPascal(card.color)}><ColorIndicator color={card.color} /></abbr>
                        </a>
                    </td>
                    <td class="center">
                        <a href={"/card/" + card.id} tabindex="-1">
                            {card.level && `${card.level}/${card.cost}` }
                        </a>
                    </td>
                    <td class="center">
                        <a href={"/card/" + card.id} tabindex="-1">
                            <abbr title={rarityConfig[card.rarity as keyof typeof rarityConfig].name ?? card.rarity}>{card.rarity}</abbr>
                        </a>
                    </td>
                    <td>
                        <a href={"/card/" + card.id} tabindex="-1">{card.setName}</a>
                    </td>
                </tr>
            )}
        </tbody>
    </table>
</div>

<style>
    .list-wrapper {
        display: flex;
        flex-flow: column nowrap;
        margin: 0 auto;
        max-width: 1000px;
        overflow-x: auto;
        scrollbar-gutter: stable;
        position: relative;
        width: 100%;
    }

    .card-list {
        font-size: 14px;
        width: 100%;
        min-width: 768px;
        max-width: 1000px;
        line-height: 20px;
        margin: 20px 0 20px 0;
        /*table-layout: fixed;*/
        border-collapse: collapse;
    }
    
    tr {
        border-bottom: 1px solid #E0DEE3;
        cursor: pointer;
        border-left: 2px solid transparent;

        &:hover {
            background-color: #eee;
        }
    }

    /* header */
    th {
        padding: 5px 0 5px 6px;
    }

    th, th * {
        text-align: left;
        font-weight: bold;
        font-size: 12px;
        text-transform: uppercase;
        white-space: nowrap;
    }

    /* cells */
    td {
        overflow: hidden;
    }

    .center {
        text-align: center;
    }

    td a {
        /* make empty cell links clickable */
        display: block;
        margin: -10em;
        padding: 10em;
    }
</style>