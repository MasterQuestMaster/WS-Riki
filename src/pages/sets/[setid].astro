---
import MainLayout from '@layouts/MainLayout.astro';
import SearchHeader from '@components/SearchHeader.astro';
import CardImageTile from '@components/CardImageTile.astro';

import { db, eq, Card, Set } from 'astro:db';

import displayConfig from "src/config/display-config.json";
import { objectMap, objectFilter } from 'src/scripts/utils';
import { getColumnFromString } from 'src/scripts/db-utils';

//We don't join cards here so that we can show empty sets.
const { setid = "" } = Astro.params;
const set = await db.select().from(Set).where(eq(Set.id, setid)).get();

if(!set) {
    return new Response(null, {
        status: 404,
        statusText: 'Not found'
    });
}

//filter "Set" columns because we already have them.
const currentDisplayConfig = displayConfig["Image"];
const filteredColumns = objectFilter(currentDisplayConfig.select, (val) => !val.startsWith("Set"));
const selectColumns = objectMap<string,any>(filteredColumns, getColumnFromString) //as any;

const cards = await db.select(selectColumns).from(Card).where(eq(Card.setId, set.id));

---
<MainLayout title={set.name}>
    <SearchHeader searchText={"set:" + set.id} />
    <main>
        {() => {
            if(cards?.length) {
                return cards.map(card => <CardImageTile card={card} />);
            }
            else {
                return <div class="no-items">This set has no cards.</div>;
            }
        }}
    </main>
</MainLayout>